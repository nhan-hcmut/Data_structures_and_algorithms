#include<iostream>
#include<vector>
#include<climits>
using namespace std;

int sumLessThanTarget(vector<int>& nums, int target) {
    // STUDENT ANSWER

    // Using a two-pointer approach, which is efficient for an already sorted array.

    /*
    INT_MIN is a macro constant defined in the <climits> header. It represents the minimum value an int type variable can store on your system.
    Two indices firstIndex and secondIndex are initialized at the beginning and end of the array.
    */
    int largestSum = INT_MIN, firstIndex = 0, secondIndex = nums.size() - 1;

    while (firstIndex < secondIndex) { // The loop checks the sum of the current pair
        int currentSum = nums.at(firstIndex) + nums.at(secondIndex);

        if (currentSum < target) { // If it is less than the target, it is a valid candidate -> update largestSum if better
            largestSum = max(largestSum, currentSum);
            firstIndex++;
        }
        else { // If it is greater than or equal to the target, decrease the secondIndex to try a smaller number
            secondIndex--;
        }
    }
    return largestSum;
}

int main() {
    // Test 1
    vector<int> nums1 {1, 2, 3, 5, 6, 9};
    int target = 7;
    cout << sumLessThanTarget(nums1, target) << endl; // Result: 6

    // Test 2
    vector<int> nums2 {18392640, 447224685};
    target = 765618120;
    cout << sumLessThanTarget(nums2, target) << endl; // result: 465617325
    
    // Test 3
    vector<int> nums3 {3274164, 26687368, 49529588, 80086665, 83966272, 98496034, 123347988, 127212839, 129654000, 140718048, 149774724, 176219652, 184851030,217156519, 218264487, 270284968, 352939041, 389008230, 464654688, 487886517};
    target = 254426466;
    cout << sumLessThanTarget(nums3, target) << endl; // result: 253001988

    // Test 4
    vector<int> nums4 {433548, 1355760, 6000300, 10867569, 11672190, 11791020, 15676016, 19602602, 29204277, 36191424, 46448220, 48165468, 54370470, 55425312, 57059275, 65688816, 75028278, 75663000, 77672320, 79035400, 82892084, 87878584, 100611504, 103954739, 105073221, 105767616, 110403290, 115546008, 120415918, 125102743, 125538380, 128394552, 129679864, 131947500, 136126731, 137887530, 138872184, 154101360, 156503190, 159611730, 162446265, 185313058, 185532884, 186219604, 194213481, 197811900, 198141120, 200211380, 201091800, 208289653, 215258960, 222094880, 233294250, 234771968, 236988738, 245165670, 245224320, 265742883, 270360662, 271660182, 274862624, 290865563, 296713989, 309555288, 315219614, 322827552, 331936551, 344035656, 345390984, 366729552, 388096618, 417109884, 433022589, 451819404, 477262743, 482730050, 499542729, 507712771, 510586125, 520560625, 521857512, 558384400, 574928480, 585575262, 597902940, 602644185, 620876256, 633824282, 640029288, 656891152, 672796296, 694478169, 710638320, 715864855, 720203000, 731918484, 743465865, 793780922, 838074092, 863009709};
    target = 824127749;
    cout << sumLessThanTarget(nums4, target) << endl; // result: 824127283

    // Test 5
    vector<int> nums5 {148670, 867888, 875182, 903927, 1422080, 1533494, 1738175, 1829581, 2366754, 2746884, 3142854, 3397387, 3411565, 3818388, 4072660, 4693340, 4877435, 4895286, 6609120, 6974240, 7268400, 7362784, 7866086, 8927505, 9651487, 9919160, 10486815, 10898124, 11515840, 11665455, 12051825, 12078839, 12681696, 13808012, 14356794, 14715312, 14716072, 15449485, 16093836, 16403464, 16536996, 16586208, 16873126, 17639370, 18278514, 18620710, 19334477, 19573125, 19596792, 19890953, 20154854, 20847240, 20910492, 20956704, 21395512, 23491188, 24219300, 25376625, 26207340, 26439998, 26707275, 27156402, 28596360, 28904148, 29121120, 29295345, 30405660, 31031516, 31255388, 31326230, 33475500, 34216416, 35426328, 35661010, 36386076, 36968301, 37073780, 37677618, 38484086, 39821472, 40319136, 40570244, 41692800, 41960375, 42397731, 43396155, 43594304, 43637538, 43943532, 46382504, 46525930, 47257402, 47408628, 48272414, 48773663, 49092617, 51552200, 52219028, 54340608, 54823824, 56038526, 56581848, 56861523, 57358026, 57842533, 59376933, 59414712, 60450540, 64657380, 64704068, 66190706, 66206283, 66331533, 66363088, 67750410, 68037164, 68212620, 68464656, 69091002, 70376418, 71180016, 73453760, 74751230, 78195051, 79337620, 80765896, 81941310, 82345488, 82935300, 86973586, 87590514, 87658515, 89080992, 90588654, 91119595, 94258536, 94836841, 95515203, 95591678, 96806467, 96961464, 98026107, 99834679, 99865752, 100360680, 100451825, 101770466, 101895960, 101963757, 102229111, 102267975, 102494637, 103019100, 104477616, 104778188, 104846341, 107341731, 107963492, 108733898, 109158826, 110179458, 110907318, 111974994, 113254397, 114281670, 114330591, 114370320, 115988130, 116940660, 117742023, 118782777, 119693168, 120855504, 121267077, 121882341, 122320384, 123109427, 123817188, 125167334, 125570088, 126044821, 126638620, 129161994, 130268851, 130409193, 130806848, 131950566, 132255990, 132966135, 133195396, 134215206, 134761840, 136324142, 136523070, 137586610, 138553191, 138624650, 138849165, 139412350, 139658400, 139720540, 141362624, 142463701, 143412290, 143803719, 144448320, 146039950, 146350840, 147066023, 148130001, 148178548, 148912864, 152560490, 152931131, 153774571, 153798792, 154411764, 155591040, 156139368, 156203424, 156857136, 157886720, 159592150, 160204584, 161720406, 161733036, 163006056, 165051354, 168807782, 168879768, 169178380, 170202368, 171636660, 174968073, 175451200, 176282886, 178175760, 180339390, 182170725, 182497755, 183082630, 183268197, 188321570, 189612882, 191186695, 191393622, 192013506, 192406024, 192635250, 193142139, 193267042, 194106698, 194650456, 196457012, 198991800, 199603485, 201586395, 206524368, 207309893, 208494664, 209766348, 211332496, 212911590, 213187506, 218085760, 218969988, 221597607, 223527986, 224410244, 227465168, 228637404, 231176314, 231231736, 231654210, 233061804, 234077824, 236524236, 237734100, 237994016, 238954290, 240542175, 242089300, 244208491, 245619612, 246359520, 247283913, 247932000, 248040512, 249337296, 252799771, 252852846, 258007152, 260729388, 261782706, 272610030, 273137280, 274240308, 275481020, 279961612, 281881138, 282871104, 283129800, 284008846, 285174208, 285300524, 287951693, 288489058, 289339632, 292905441, 296735190, 297073602, 297139952, 297821972, 307271640, 307322764, 307503040, 308308889, 308340375, 308915175, 309511045, 311487239, 311568825, 311781304, 315932048, 317123929, 318158627, 318185552, 320043920, 320735305, 323680300, 324141400, 324157185, 324183827, 327490044, 334717560, 334736927, 335839738, 336042420, 336107937, 340452784, 341132721, 342160680, 342468380, 345692097, 354995788, 355209458, 356079792, 360027104, 360906441, 362664765, 363183755, 364235606, 367230216, 367694616, 371559415, 371690202, 378771585, 379440256, 380143911, 381794688, 382158616, 384802818, 386515596, 388694000, 394684355, 395904984, 397015136, 399246872, 400051498, 408761115, 409495794, 409611744, 410143120, 410700921, 416527056, 417441660, 418494060, 422023932, 426476875, 428213667, 430626987, 431823868, 436276000, 436536188, 437977836, 439295885, 439780550, 441022194, 445777255, 446335308, 448100550, 451293184, 452477634, 453231552, 457279830, 458760846, 465057040, 467475852, 470474563, 470970203, 472322760, 472392900, 475805340, 478160342, 484251136, 484568140, 487911192, 488755876, 490639058, 492720640, 493882422, 495611928, 505058088, 510102204, 511097074, 511348626, 519288378, 520723930, 521425272, 523119613, 525012432, 525635584, 533299348, 533654520, 540374592, 541204124, 548369262, 549154032, 549954775, 557729132, 557915418, 572372904, 574316314, 574481862, 576417948, 585302487, 589727040, 589989290, 591597825, 596377626, 597818781, 599788121, 599788722, 610156584, 611075400, 611201890, 616135192, 619281180, 619668864, 624435570, 625837320, 637828452, 644069485, 645793772, 658629262, 677032524, 678415222, 679787985, 679913320, 681091316, 688420096, 697247360, 697294848, 706278195, 706591512, 715966076, 717264548, 727519050, 729983639, 733538624, 733580712, 735979524, 736808753, 738052128, 744336360, 746508442, 763112990, 769687893, 776541192, 801244213, 801535170, 805520934, 809419896, 812247781, 813717520, 819328972, 841435595, 848761056, 860930560, 873524952, 877449450, 894053950, 898280352, 898756929, 913543238, 924636663, 952917459, 957139026, 1027988460, 1054852640};
    target = 147975043;
    cout << sumLessThanTarget(nums5, target) << endl; // result: 147974352
    
    return 0;
}