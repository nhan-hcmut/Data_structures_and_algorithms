Algorithm printXRecursively(val n <integer>)

    Precondition: 2 integer variables order and stop have been declared and initialized.
    Postcondition: A line of the Cantor set is printed.

    if n = stop then
        print n characters 'X'
    else
        printXRecursively(n/3)
        print n/3 spaces
        printXRecursively(n/3)
    end if
End printXRecursively

Algorithm printCantorSet
    Postcondition: The Cantor set is printed by using characters 'X' and spaces.

    stop := 0
    order := 0

    while order < 1 do
        print "Order (must be greater than 0):"
        read order
    end while

    for line:=0 to order-1 do
        stop := 3 raised to the power of (order-line-1)
        printXRecursively(3 raised to power of order-1)
        print newline character
    end for
End printCantorSet
